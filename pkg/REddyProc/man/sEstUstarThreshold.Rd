\name{sEstUstarThreshold}
\alias{sEstUstarThreshold}
\title{sEddyProc$sEstUstarThreshold - Estimating ustar threshold}
\description{Estimate the Ustar threshold by aggregating the estimates for seasonal and temperature subsets.}
\usage{sEstUstarThreshold(ds = sDATA, UstarColName = "Ustar", 
    NEEColName = "NEE", TempColName = "Tair", RgColName = "Rg", 
    seasonFactor.v = createSeasonFactorMonth(ds$sDateTime), 
    seasonFactorsYear = getYearOfSeason(seasonFactor.v, 
        ds$sDateTime), ctrlUstarEst.l = controlUstarEst(), 
    ctrlUstarSub.l = controlUstarSubsetting(), fEstimateUStarBinned = estUstarThresholdSingleFw2Binned, 
    isCleaned = FALSE)}
\arguments{
  \item{ds}{data.frame with columns named by the following arguments}
  \item{UstarColName}{column name for UStar}
  \item{NEEColName}{column name for NEE}
  \item{TempColName}{column name for air temperature}
  \item{RgColName}{column name for solar radiation for omitting night time data}
  \item{seasonFactor.v}{factor for subsetting times (see details)}
  \item{seasonFactorsYear}{named integer vector: for each seasonFactor level, get the year that this season belongs to}
  \item{ctrlUstarEst.l}{control parameters for estimating uStar on a single binned series, see \code{\link{controlUstarEst}}}
  \item{ctrlUstarSub.l}{control parameters for subsetting time series (number of temperature and Ustar classes \ldots), see \code{\link{controlUstarSubsetting}}}
  \item{fEstimateUStarBinned}{function to estimate UStar on a single binned series, see \code{\link{estUstarThresholdSingleFw2Binned}}}
  \item{isCleaned}{set to TRUE, if the data was cleaned already, to avoid expensive call to \code{\link{cleanUStarSeries}}.}
}
\details{The threshold for sufficiently turbulent conditions u* (Ustar) 
is estimated for different subsets of the time series.
From the estimates for each season (each value in \code{seasonFactor.v} 
the maximum of all seasons of one year is reported as estimate for this year.
Within each season the time series is split by temperature classes. 
Among these Ustar estimates, the median is reported as season value.

In order to split the seasons, the uses must provide a vector with argument \code{seasonFactor.v}.
All positions with the same factor, belong to
the same season. It is conveniently generated by one of the following functions:
\itemize{
\item{ \code{\link{createSeasonFactorMonth}} (default DJF-MAM-JJA-SON with December from previous to January of the year) }
\item{ \code{\link{createSeasonFactorMonthWithinYear}} (default DJF-MAM-JJA-SON with December from the same year) }
\item{ \code{\link{createSeasonFactorYday}} for a refined specification of season starts. }
} 

The estimation of Ustar on a single binned series can be selected argument \code{fEstimateUStarBinned}.
\itemize{
\item{ \code{\link{estUstarThresholdSingleFw1Binned}} }
\item{ \code{\link{estUstarThresholdSingleFw2Binned}} (default) }
} 

This function is called by
\itemize{
\item{ \code{\link{sEstUstarThresholdDistribution}} which additionally estimates median and confidence intervals for each year by bootstrapping the original data within seasons.}
} 

\describe{\item{One-big-season fallback}{
If there are too few records within one year, instead of reporting no threshold, the records of all the seasons of one year 
can be aggregated to one big season.
By default, a warning is issued. The user can suppress the fallback by providing option
\code{ctrlUstarSub.l$isUsingOneBigSeasonOnFewRecords = FALSE} (see \code{\link{controlUstarSubsetting}}
}}

\describe{\item{change point detection (CPT) method}{
With specifying \code{ctrlUstarEst.l=controlUstarEst(isUsingCPTSeveralT=TRUE)}
change point detection is applied instead of the moving point test (e.g. with Fw2Binned).

The sometimes sensitive binning of uStar values within a temperature class is avoided.
Further, possible spurious thresholds are avoid by testing that the model with a threshold
fits the data better than a model without a threshold using a likelihood ratio test.
In addition, with CPT seasons are excluded where a threshold was detected in only less 
than ctrlUstarEst.l$minValidUStarTempClassesProp (default 20\% ) of the 
temperature classes.

Note, that this method often gives higher estimates of the u* threshold.
}}}
\value{A list with entries
\item{uStarTh}{data.frame with columns "aggregationMode","year","season","uStar"
with rows for "single": the entire aggregate (median across years)
, "year": each year (maximum across seasons)
, "season": each season (median across temperature classes)}
\item{seasonAggregation}{data.frame listing for each season, the number of valid records, and the seasons it was aggregated to in case of few records}
\item{UstarSeasonTemp}{numeric matrix (nTemp x nAggSeason): estimates for each temperature subset for each aggregated season
uStar values are reported for each season, together with the information on the seasons: to which aggregated season
it belongs (if there were too few records within year), and to which year it is associated.
}}
\references{Ustar filtering following the idea in Papale, D. et al. (2006)  
Towards a standardized processing of net ecosystem exchange measured with eddy covariance technique: algorithms and uncertainty estimation.
Biogeosciences 3(4): 571-583.}
\author{TW, OM
(Department for Biogeochemical Integration at MPI-BGC, Jena, Germany)}




\examples{
  if( FALSE ) { #Only execute interactively (it fails during first package installation)
    Dir.s <- paste(system.file(package='REddyProc'), 'examples', sep='/')
    EddyData.F <- ds <- fLoadTXTIntoDataframe('Example_DETha98.txt', Dir.s)
    EddyDataWithPosix.F <- ds <- fConvertTimeToPosix(EddyData.F, 'YDH', Year.s='Year', Day.s='DoY', Hour.s='Hour')
    EddyProc.C <- sEddyProc$new('DE-Tha', EddyDataWithPosix.F, c('NEE','Rg','Tair','VPD','Ustar'))   
    #ds <- head(ds,2000)
    (Result.L <- EddyProc.C$sEstUstarThreshold())
(Results.L2 <- EddyProc.C$sEstUstarThreshold(ctrlUstarEst.l=controlUstarEst(isUsingCPTSeveralT=TRUE)))
  }
}
